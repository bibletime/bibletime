sudo: false
dist: trusty
language: cpp
compiler: gcc

branches:
  only:
    - master
    - master_coverity_scan
    - /^stable-.*$/

os:
  - linux

before_install:
  - eval "${MATRIX_EVAL}"
  - source /opt/qt59/bin/qt59-env.sh
  - ./tests/scripts/install-sword.sh
  - export LD_LIBRARY_PATH=${HOME}/local/lib:$LD_LIBRARY_PATH

script:
  - if [ "0${COVERITY_SCAN_BRANCH}" != "01" ]; then mkdir b && cd b && cmake .. -DCMAKE_INSTALL_PREFIX=${HOME}/local && make -j4 && make install; fi

env:
  global:
     # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
     #   via the "travis encrypt" command using the project repo's public key
     - secure: "FmufrIN8L4Ptfbn0Lw/1S7fKnPxpvv7t9KEN5XhQ3lwW5Qir7mGe2r87biaKyjo15VNc4bizA2wR63YUXz6JPMETwYPahKSlW2tAsHmJTOwyweNW7zkKf6Iwrf9vYaMZyOpR2jRkD9Ko8vd4BpIw4FF6X/vaJqfnvQyIOiDGFr8="


matrix:
  include:
    - addons:
        apt:
          sources:
            - sourceline: ppa:beineri/opt-qt595-trusty
          packages:
            - cmake
            - libclucene-dev
            - qt59base
            - qt59declarative
            - qt59svg
            - qt59webengine
            - qt59xmlpatterns
            - qt59tools
      env:
        - MATRIX_EVAL="CC=gcc CXX=g++"
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: ppa:beineri/opt-qt595-trusty
          packages:
            - gcc-4.9
            - g++-4.9
            - cmake
            - libclucene-dev
            - qt59base
            - qt59declarative
            - qt59svg
            - qt59webengine
            - qt59xmlpatterns
            - qt59tools
      env:
        - MATRIX_EVAL="CC=gcc-4.9 CXX=g++-4.9"
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: ppa:beineri/opt-qt595-trusty
          packages:
            - gcc-5
            - g++-5
            - cmake
            - libclucene-dev
            - qt59base
            - qt59declarative
            - qt59svg
            - qt59webengine
            - qt59xmlpatterns
            - qt59tools
      env:
        - MATRIX_EVAL="CC=gcc-5 CXX=g++-5"
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: ppa:beineri/opt-qt595-trusty
          packages:
            - gcc-6
            - g++-6
            - cmake
            - libclucene-dev
            - qt59base
            - qt59declarative
            - qt59svg
            - qt59webengine
            - qt59xmlpatterns
            - qt59tools
      env:
        - MATRIX_EVAL="CC=gcc-6 CXX=g++-6"
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: ppa:beineri/opt-qt595-trusty
          packages:
            - gcc-7
            - g++-7
            - cmake
            - libclucene-dev
            - qt59base
            - qt59declarative
            - qt59svg
            - qt59webengine
            - qt59xmlpatterns
            - qt59tools
      env:
        - MATRIX_EVAL="CC=gcc-7 CXX=g++-7"
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: ppa:beineri/opt-qt595-trusty
          packages:
            - gcc-8
            - g++-8
            - cmake
            - libclucene-dev
            - qt59base
            - qt59declarative
            - qt59svg
            - qt59webengine
            - qt59xmlpatterns
            - qt59tools
      env:
        - MATRIX_EVAL="CC=gcc-8 CXX=g++-8"
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
            - sourceline: ppa:beineri/opt-qt595-trusty
          packages:
            - clang-4.0
            - llvm-4.0-dev
            - cmake
            - libclucene-dev
            - qt59base
            - qt59declarative
            - qt59svg
            - qt59webengine
            - qt59xmlpatterns
            - qt59tools
      env:
        - MATRIX_EVAL="CC=clang-4.0 CXX=g++-clang++-4.0"
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
            - sourceline: ppa:beineri/opt-qt595-trusty
          packages:
            - clang-5.0
            - llvm-5.0-dev
            - cmake
            - libclucene-dev
            - qt59base
            - qt59declarative
            - qt59svg
            - qt59webengine
            - qt59xmlpatterns
            - qt59tools
      env:
        - MATRIX_EVAL="CC=clang-5.0 CXX=g++-clang++-5.0"
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
            - sourceline: ppa:beineri/opt-qt595-trusty
          packages:
            - clang-6.0
            - llvm-6.0-dev
            - cmake
            - libclucene-dev
            - qt59base
            - qt59declarative
            - qt59svg
            - qt59webengine
            - qt59xmlpatterns
            - qt59tools
      env:
        - MATRIX_EVAL="CC=clang-6.0 CXX=g++-clang++-6.0"

addons:
  coverity_scan:
    project:
      name: "bibletime/bibletime"
      description: "BibleTime build submitted via Travis CI"
    notification_email: bibletime-coverity@heh.ee
    build_command_prepend: "mkdir b && cd b && cmake .. -DCMAKE_INSTALL_PREFIX=${HOME}/local/"
    build_command: "cmake --build ."
    branch_pattern: .*_coverity_scan

notifications:
  irc: "chat.freenode.net#bibletime"
